{
    "docs": [
        {
            "location": "/",
            "text": "StateMod User Documenation\n\n\nThis documentation is the user manual for Colorado's Decision Support Systems (CDSS) StateMod water allocation model software.\n\n\nThis documentation is a work in progress, with the initial online version including references to the existing PDF format\nand examples to illustrate use of online documentation features.\n\n\nThis documentation page includes the following sections:\n\n\n\n\nHow to Use this Documentation\n - guidance and list of main documentation sections\n\n\nColorado's Decision Support Systems\n - the system under which the software is maintained\n\n\nOpen Water Foundation\n - lead organization for moving StateMod to open source project\n\n\nLicense\n - license for software and this documentation\n\n\nSource Repository on GitHub\n - location of StateMod repository in GitHub\n\n\n\n\n\n\nHow to Use this Documentation\n\n\nThis documentation is the user documentation for the StateMod software and currently consists of the legacy Word/PDF documentation. \nThe legacy documentation may be converted to online navigable form.\n\n\nThe legacy PDF documents are referenced from web pages for each section of the user documentation,\nusing the original chapter numbers.\n\n\nColorado's Decision Support Systems\n\n\nColorado's Decision Support Systems (CDSS, \ncdss.state.co.us\n)\nhas been developed to answer important questions about Colorado's water resources.\nCDSS efforts are led by the \nColorado Water Conservation Board (CWCB)\n\nand \nColorado Division of Water Resources (DWR)\n.\n\n\n\n\nOne component of CDSS is the StateMod water allocation model, which estimates water allocation given water supply and demand and\nphysical and legal (water right) constraints on water decisions.\nStateMod results are linked to the StateCU consumptive use model and in some basins the MODFLOW groundwater model.\n\n\nIn late 2016, the Open Water Foundation began the effort to move StateMod and other CDSS software to open source licensing\nand establish open source software projects, referred to as \"OpenCDSS\", and this documentation is one project outcome.\n\n\nOpen Water Foundation\n\n\nThe Open Water Foundation (OWF, \nopenwaterfoundation.org\n) is a nonprofit social enterprise\nthat focuses on developing and supporting open source software to make better\ndecisions about water resources.  OWF is providing technical resources and management to\ntransition StateMod and other CDSS software to sustainable open source software projects.\n\n\nSee also other \nOWF learning resources\n.\n\n\nLicense\n\n\nThe license for this documentation is being determined in the CDSS open source project.\nMore information will be provided later.\n\n\nSource Repository on GitHub\n\n\nThe source files for this documentation are maintained in the public GitHub repository for StateMod: \ncdss-app-statemod-fortran-doc-user\n.\nDocumentation website files currently are copied to the Open Water Foundation \nLearn StateMod\n website,\nand will be copied to an OpenCDSS website once software tools are made available publicly.\n\n\nRelease Notes\n\n\nRelease notes for StateMod and this documentation will be implemented as the open source migration is finalized.",
            "title": "Home"
        },
        {
            "location": "/#statemod-user-documenation",
            "text": "This documentation is the user manual for Colorado's Decision Support Systems (CDSS) StateMod water allocation model software.  This documentation is a work in progress, with the initial online version including references to the existing PDF format\nand examples to illustrate use of online documentation features.  This documentation page includes the following sections:   How to Use this Documentation  - guidance and list of main documentation sections  Colorado's Decision Support Systems  - the system under which the software is maintained  Open Water Foundation  - lead organization for moving StateMod to open source project  License  - license for software and this documentation  Source Repository on GitHub  - location of StateMod repository in GitHub",
            "title": "StateMod User Documenation"
        },
        {
            "location": "/#how-to-use-this-documentation",
            "text": "This documentation is the user documentation for the StateMod software and currently consists of the legacy Word/PDF documentation. \nThe legacy documentation may be converted to online navigable form.  The legacy PDF documents are referenced from web pages for each section of the user documentation,\nusing the original chapter numbers.",
            "title": "How to Use this Documentation"
        },
        {
            "location": "/#colorados-decision-support-systems",
            "text": "Colorado's Decision Support Systems (CDSS,  cdss.state.co.us )\nhas been developed to answer important questions about Colorado's water resources.\nCDSS efforts are led by the  Colorado Water Conservation Board (CWCB) \nand  Colorado Division of Water Resources (DWR) .   One component of CDSS is the StateMod water allocation model, which estimates water allocation given water supply and demand and\nphysical and legal (water right) constraints on water decisions.\nStateMod results are linked to the StateCU consumptive use model and in some basins the MODFLOW groundwater model.  In late 2016, the Open Water Foundation began the effort to move StateMod and other CDSS software to open source licensing\nand establish open source software projects, referred to as \"OpenCDSS\", and this documentation is one project outcome.",
            "title": "Colorado's Decision Support Systems"
        },
        {
            "location": "/#open-water-foundation",
            "text": "The Open Water Foundation (OWF,  openwaterfoundation.org ) is a nonprofit social enterprise\nthat focuses on developing and supporting open source software to make better\ndecisions about water resources.  OWF is providing technical resources and management to\ntransition StateMod and other CDSS software to sustainable open source software projects.  See also other  OWF learning resources .",
            "title": "Open Water Foundation"
        },
        {
            "location": "/#license",
            "text": "The license for this documentation is being determined in the CDSS open source project.\nMore information will be provided later.",
            "title": "License"
        },
        {
            "location": "/#source-repository-on-github",
            "text": "The source files for this documentation are maintained in the public GitHub repository for StateMod:  cdss-app-statemod-fortran-doc-user .\nDocumentation website files currently are copied to the Open Water Foundation  Learn StateMod  website,\nand will be copied to an OpenCDSS website once software tools are made available publicly.",
            "title": "Source Repository on GitHub"
        },
        {
            "location": "/#release-notes",
            "text": "Release notes for StateMod and this documentation will be implemented as the open source migration is finalized.",
            "title": "Release Notes"
        },
        {
            "location": "/disclaimer/disclaimer/",
            "text": "StateMod / Disclaimer\n\n\nThe following was taken from the legacy Word version of the documentation.\n\n\nThis program is furnished by The State of Colorado (State) and is accepted and\nused by the recipient upon the expressed understanding that the State makes no warranties,\nexpress or implied, concerning the accuracy, completeness, reliability, usability, or\nsuitability for any particular purpose of the information and data contained in this\nprogram or furnished in connection therewith, and the State shall be under\nno liability whatsoever to any person by reason of any use made thereof. \nThe program herein belongs to the State of Colorado.\nTherefore, the recipient further agrees not to assert any proprietary rights\ntherein or to further represent this program to anyone as other than a State program.",
            "title": "Disclaimer"
        },
        {
            "location": "/disclaimer/disclaimer/#statemod-disclaimer",
            "text": "The following was taken from the legacy Word version of the documentation.  This program is furnished by The State of Colorado (State) and is accepted and\nused by the recipient upon the expressed understanding that the State makes no warranties,\nexpress or implied, concerning the accuracy, completeness, reliability, usability, or\nsuitability for any particular purpose of the information and data contained in this\nprogram or furnished in connection therewith, and the State shall be under\nno liability whatsoever to any person by reason of any use made thereof. \nThe program herein belongs to the State of Colorado.\nTherefore, the recipient further agrees not to assert any proprietary rights\ntherein or to further represent this program to anyone as other than a State program.",
            "title": "StateMod / Disclaimer"
        },
        {
            "location": "/acknowledgement/acknowledgement/",
            "text": "StateMod / Acknowledgement\n\n\nThis documentation was copied from the legacy Word version.\n\n\nThe State of Colorado's Stream Simulation Model (StateMod) was developed from a model\ndeveloped previously for the State of Colorado as part of the\nGreen Mountain Pump Back and Exchange Project (Boyle Engineering Corporation, 1986).\nThe model enhancement, support, and renaming by the State of Colorado occurred to provide additional capabilities.\nSince the State of Colorado took over the maintenance of the StateMod program,\nthe model has undergone numerous enhancements using the following version scheme:\n\n\nVersion XX.YY.ZZ\n\n\n\n\nWhere:\n\n\n\n\nXX\n is the major version,\n\n\nYY\n is a new functionality, and\n\n\nZZ\n is a correction\n\n\n\n\nAs presented below, key enhancements occurred in 1988 to allow a daily time step,\n1989 to include wells, 2001 to allow variable efficiency,\n2006 to include plans (augmentation, administration, re-use, Term & Condition, etc.),\nand 2007 to allow four land use types (SW Flood, SW Sprinkler, GW Flood and GW Sprinkler)\nunder a single ditch system. With each major enhancement significant effort has been\nmade to maintain existing file formats and processes so that historic applications can be duplicated.\n\n\nIn general, a new primary version number (e.g. 10.x) was initiated whenever an existing input format,\noutput format, new process, new compiler, or extensive testing was added.\nSimilarly relatively minor enhancements that do not impact existing formats or process get in a new sub version number (e.g. 10.12). \n\n\n\nMajor StateMod Enhancements\n\n\n\n\n\n\n\n\n\nVersion\n\n\nYear\n\n\nAreas of Key Enhancements\n\n\n\n\n\n\n\n\n\n\n1.\n\n\n1986\n\n\nOriginal Development\n\n\n\n\n\n\n2. \u2013 4.\n\n\n1995\n\n\nBaseflow module enhancement\nNew reporting capabilities.\n\n\n\n\n\n\n5.\n\n\n1996\n\n\nAllow multiple replacement reservoirs and reoperate for non-downstream return flows.\n\n\n\n\n\n\n6.\n\n\n1996\n\n\nEnhanced binary file reporting.\nNew reporting capabilities.\n\n\n\n\n\n\n7.\n\n\n1997\n\n\nTreat Instream flows as a Reach.\nLinked model capability.\n\n\n\n\n\n\n8.\n\n\n1998\n\n\nDaily simulation capability.\n\n\n\n\n\n\n9.\n\n\n1999\n\n\nWell simulation capability.\n\n\n\n\n\n\n10.\n\n\n2001\n\n\nVariable efficiency capability.\n\n\n\n\n\n\n11.\n\n\n2006\n\n\nPlans. Operating rules that allow plans, diversion type, carrier losses, annual limits and on/off dates.\n\n\n\n\n\n\n12.\n\n\n2007-2008\n\n\nIrrigation Practice File is allowed to contain 4 water supply irrigation method combinations (Surface Water Flood, Surface Water Sprinkler, Ground Water Flood and Ground Water Sprinkler).  Expanded the ability to divert to and from plans.\n\n\n\n\n\n\n13\n\n\n2012\n\n\nExpanded the ability to divert to and from plans.  Extensive testing of plans by application to the Lower South Platte River in Colorado.\n\n\n\n\n\n\n14\n\n\n2014\n\n\nRevised the program to compile and store under GitHub in order to allow multiple authors to enhance the program and save edits as different branches that can be reviewed and/or adopted for production.\n\n\n\n\n\n\n15\n\n\n2015\n\n\nTesting and comparison to historic results following the transfer to GitHub. Added a Changed Water Right operating rule (type 26) that allows a water right to be diverted by priority from the river and temporarily stored for later use.",
            "title": "1 - Acknowledgement"
        },
        {
            "location": "/acknowledgement/acknowledgement/#statemod-acknowledgement",
            "text": "This documentation was copied from the legacy Word version.  The State of Colorado's Stream Simulation Model (StateMod) was developed from a model\ndeveloped previously for the State of Colorado as part of the\nGreen Mountain Pump Back and Exchange Project (Boyle Engineering Corporation, 1986).\nThe model enhancement, support, and renaming by the State of Colorado occurred to provide additional capabilities.\nSince the State of Colorado took over the maintenance of the StateMod program,\nthe model has undergone numerous enhancements using the following version scheme:  Version XX.YY.ZZ  Where:   XX  is the major version,  YY  is a new functionality, and  ZZ  is a correction   As presented below, key enhancements occurred in 1988 to allow a daily time step,\n1989 to include wells, 2001 to allow variable efficiency,\n2006 to include plans (augmentation, administration, re-use, Term & Condition, etc.),\nand 2007 to allow four land use types (SW Flood, SW Sprinkler, GW Flood and GW Sprinkler)\nunder a single ditch system. With each major enhancement significant effort has been\nmade to maintain existing file formats and processes so that historic applications can be duplicated.  In general, a new primary version number (e.g. 10.x) was initiated whenever an existing input format,\noutput format, new process, new compiler, or extensive testing was added.\nSimilarly relatively minor enhancements that do not impact existing formats or process get in a new sub version number (e.g. 10.12).   \nMajor StateMod Enhancements     Version  Year  Areas of Key Enhancements      1.  1986  Original Development    2. \u2013 4.  1995  Baseflow module enhancement New reporting capabilities.    5.  1996  Allow multiple replacement reservoirs and reoperate for non-downstream return flows.    6.  1996  Enhanced binary file reporting. New reporting capabilities.    7.  1997  Treat Instream flows as a Reach. Linked model capability.    8.  1998  Daily simulation capability.    9.  1999  Well simulation capability.    10.  2001  Variable efficiency capability.    11.  2006  Plans. Operating rules that allow plans, diversion type, carrier losses, annual limits and on/off dates.    12.  2007-2008  Irrigation Practice File is allowed to contain 4 water supply irrigation method combinations (Surface Water Flood, Surface Water Sprinkler, Ground Water Flood and Ground Water Sprinkler).  Expanded the ability to divert to and from plans.    13  2012  Expanded the ability to divert to and from plans.  Extensive testing of plans by application to the Lower South Platte River in Colorado.    14  2014  Revised the program to compile and store under GitHub in order to allow multiple authors to enhance the program and save edits as different branches that can be reviewed and/or adopted for production.    15  2015  Testing and comparison to historic results following the transfer to GitHub. Added a Changed Water Right operating rule (type 26) that allows a water right to be diverted by priority from the river and temporarily stored for later use.",
            "title": "StateMod / Acknowledgement"
        },
        {
            "location": "/introduction/introduction/",
            "text": "StateMod / Introduction\n\n\nThis documentation has been copied from the legacy Word version and updated slightly for usability.\n\n\n\n\nSummary\n\n\nKey Components\n\n\nDefinitions\n\n\nMajor Modules\n\n\nRemainder of Documentation\n\n\n\n\n\n\nSummary\n\n\nThe State of Colorado's Stream Simulation Model (StateMod) is a monthly or daily water\nallocation and accounting model capable of making comparative analyses for the\nassessment of various historical and future water management policies in a river basin.\nIt is designed to be applied to any river basin through appropriate input data preparation. \n\n\nThis document was prepared to explain the features and functions of StateMod and\npresumes the reader has a basic understanding of river operations.\nIt is current for StateMod Version 15. The documentation is intended for use by engineers,\nwater resource planners or anyone involved in water management decision making.\nIt is structured such that Sections 1 - 3 will stand alone to provide a general description of the model\nand its features. Sections 4 \u2013 10 provide the detail required to develop data sets and implement the model in a river basin.\n\n\nStateMod's operation, like the stream itself, is governed by its hydrology, water rights,\nand the associated structures and operating rules.\nIt recognizes five (5) types of water rights: direct flow rights, instream flow rights,\nreservoir storage rights, well rights, and operational rights.\nEach of the water rights is given an administration number (rank) and location in the stream system.\nThe model then sorts the water rights by rank and simulates their operation by priority using\nthe Prior Appropriation Doctrine (first in time, first in right).\nThe water right categories are self-explanatory with the possible exception of the operational rights,\nwhich generally pertain to reservoir operating policies, exchanges,\ncarrier ditch systems, and terms and conditions associated with a water rights operation.\n\n\nKey Components\n\n\nThe key components of StateMod are as follows:\n\n\n\n\nDaily or Monthly Time Step.\n Simulates in a monthly or daily time step. For a daily simulation,\ninput data requirements may be simplified by allowing the user to:\n\n\nProvide daily data\n\n\nEstimate daily data by requesting the model divide a monthly value by the number of days in a month\n\n\nEstimate daily data by requesting the model use a monthly average, or\n\n\nEstimate daily data by requesting the model use monthly data and another gages daily distribution.\n\nDaily baseflow data may be developed directly or estimated from monthly baseflow estimates. \n\n\n\n\n\n\nNetwork System.\n Simulates tributaries and main stem river systems through the use of a tree structured network system. \n\n\nPrior Appropriation Doctrine.\n Simulates direct flow, instream flow, reservoir storage,\nwell and operational rights under the Prior Appropriation doctrine (i.e. First in time, first in right)\nas a function of water availability, priority, decreed amount, demand, structure capacity and location. \n\n\nOperational Rules.\n Simulates a wide variety of operating agreements and exchanges between one or more structures. \n\n\nReturn Flows.\n For a given structure, simulates one or more return flow patterns\nreturning to one or more stream nodes to represent the impact of surface and ground water returns on stream operations. \n\n\nInstream Flows.\n Simulates Instream Flows as a reach or point. \n\n\nWells.\n Simulates wells as the sole source to a water user or as a supplemental supply. \n\n\nPlans.\n Simulates terms and conditions associated with a water transfer,\nreusable water supplies or out-of-priority well pumping.\n\n\nBase or Natural Flows.\n Estimates a base or natural streamflow from gaged or estimated streamflow, diversion and reservoir data. \n\n\nModified Direct Solution Algorithm.\n Uses an efficient, Modified Direct Solution Algorithm (Bennett, Ray R., December 2000),\nwhich allows variable efficiency, soil moisture accounting and immediate (current time step) return flows to be evaluated without having to iterate. \n\n\nVariable Efficiency.\n Allows the user to simulate water use by specifying an average or variable efficiency. \n\n\nSoil Moisture Accounting.\n Simulates soil moisture inflow, use and storage. \n\n\nTransmountain Diversions.\n Simulates transmountain imports and diversions from a basin. \n\n\nCall Reporting.\n Estimates the calling structure and calling right.\n\n\nGraphical User Interface (GUI).\n Includes a comprehensive GUI that allows input data to be viewed, edited, and graphed;\noutput data to be viewed and graphed; map based depiction of basin, hydrology, structure locations, etc.\n\nCurrently the StateMod GUI should only be used to view (but not edit) data bacause of\nincompatibilities with the latest model file formats and features.\n\n\nData-centered Approach.\n The entire system operates as a data-centered component using data from \nthe CDSS database (HydroBase).\nData Management Interface (DMI) software including TSTool and StateDMI are used to automate\nprocessing HydroBase data into model input files\n    to ensure results are reproducible and easily refreshed for a new study period or database updates.\n\n\nError Checking.\n Performs extensive input data error checking throughout the program. \n\n\n\n\nDefinitions\n\n\nThe following definitions are provided in order to define commonly used terms throughout model documentation:\n\n\n\n\nBaseflow\n \u2013 Represents basin streamflows absent human\u2019s influence including diversions, return flows,\nreservoir operations and pumping. If 100% of human\u2019s influence is removed,\nbaseflows are often called natural flows.\n\n\nPhysical Flow and Available Flow\n \u2013 Physical flow represents the amount of water in the\nstream that occurs at, or above, the node. The physical flow legally available for diversion\nat a node is termed the available flow. Available flow is the portion of the physical flow that is not\nrequired to meet downstream senior water rights.\nThe Modified Direct Solution Algorithm identifies the minimum available flow at all\ndownstream nodes in order to determine the available flow at node that can be diverted. \n\n\nModel Calibration\n \u2013 Calibration is the process of simulating the river basin under historical conditions,\nand judiciously adjusting parameter estimates to achieve agreement between observed and\nsimulated values of streamflow gages, reservoir levels, and diversions.\n\n\nDiversion Structure\n \u2013 Represents structures located on the river, such as diversion headgates,\npumps and carrier ditches where water is diverted from the river to meet a diversion demand.\n\n\nReservoir Structure\n \u2013 Represents storage structures located on or off channel\nthat divert water from the river using reservoir storage rights.\n\n\nDemand Structure\n \u2013 Represent structures located on the river or off channel that have a demand,\nwhich can be met by a different structure such as a carrier, reservoir, or wells.\n\n\nInstream Flow Structure or Instream Flow Point\n \u2013 Represents a reach on the river (e.g. from tributary\nheadwaters to confluence with main stem river) or a river location (e.g. wastewater treatment plan outfall) where instream flow demands exist.\n\n\nPlan Structure\n \u2013 Represents a structure used to account for:\n\n\nAugmentation Plans\n\n\nTerms and Conditions associated with a water transfer, and\n\n\nReusable water supplies.\n\n\n\n\n\n\nUnit Response Function\n \u2013 Represent when return flows or depletions will impact the river over time.\nFor example a power plant diversion may have an immediate unit response function while an\nirrigation diversion or well pumping may have a lagged unit response function.\n\n\nEfficiencies\n \u2013 Define the amount of diverted water that is consumed versus the amount supplied.\nWhen the water supply is at the source (headgate or well head) it is called System Efficiency.\nSystem efficiency is commonly split into conveyance efficiency (representing diversions less ditch loss)\nand application efficiency (representing water use less application loss).\n\n\nConsumptive Water Requirement (CIR)\n \u2013 The amount of water required for consumption by an irrigation,\nmunicipal or instream use. The CIR excludes any conveyance or application efficiencies.\nFor an irrigation demand it is often called an Irrigation Water Requirement (IWR),\nwhich is the potential evapotranspiration less effective precipitation\n\n\n\n\nMajor Modules\n\n\nStateMod consists of four major modules:\n\n\n\n\nThe Base Flow, or Natural Flow, module\n produces a set of streamflows that would have\noccurred in the basin without a user-specified level of man's development.\nFor example, if a user supplied data that allows 100% of man's influence to be removed,\nthe base flow developed would represent natural stream flows.\nOn the other hand if a user supplies data that allows only 80% of mans influence to be removed,\nthe baseflow developed would represent something in-between (e.g. 80%) natural and developed.\nThe latter in-between approach is often used as a cost effective measure to simplify\nbaseflow development by including relatively large projects and excluding smaller,\nless significant developments. Note that any developments not included in the baseflow calculation are not ignored,\ninstead their impact on the system is included in the in-between baseflow estimate. \n\n\nThe Simulation module\n operates the river system and accounts for inflows, river gains, diversions,\ninstream flows, well pumping, and reservoir operations. \n\n\nThe Report module\n processes the results of the Simulation module into user specified reports and graphs data sets. \n\n\nThe Data Check module\n reads the input files and performs various data checks.\n\n\n\n\nFollowing is a general sequence for operating StateMod:\n\n\n\n\nDevelop a stream node network based on the location of key gages, river confluences,\nreservoirs, diversions, wells, and instream flows.\n\n\nConstruct the necessary monthly input files using the formats described in Section 4.0.\n\n\nCheck the input files by executing StateMod's Data Check Module.\n\n\nDevelop base stream flows by executing StateMod's Base Flow Module.\n\n\nSimulate the stream system's operation by executing StateMod's Simulation Module.\n\n\nEvaluate results and generate graphs and tables by executing StateMod's Report Module.\n\n\nIf desired, add daily simulation capability.\n\n\n\n\nRemainder of Documentation\n\n\nThe remainder of this document is organized as follows:\n\n\n\n\n\n\n\n\nSection\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n3.\n\n\nModel Description\n\n\nDescribes the theoretical basis of river operations, water allocation and reservoir operations\n\n\n\n\n\n\n4.\n\n\nInput Description\n\n\nDescribes the input format for each data set\n\n\n\n\n\n\n5.\n\n\nOutput Description\n\n\nDescribes the contents of the various outputs files\n\n\n\n\n\n\n6.\n\n\nModel Operation\n\n\nDescribes the model's operation from both the screen or command line arguments\n\n\n\n\n\n\n7.\n\n\nStandard Modeling Procedures\n\n\nDescribes technical details of selected portions of the programs operation and provides information on standard modeling procedures\n\n\n\n\n\n\n8.\n\n\nSupporting Utilities\n\n\nDescribes supporting utilities available to assist in developing a StateMod data set\n\n\n\n\n\n\n9.\n\n\nDiscontinued but Supported Files\n\n\nDescribes discontinued but supported data file formats",
            "title": "2 - Introduction"
        },
        {
            "location": "/introduction/introduction/#statemod-introduction",
            "text": "This documentation has been copied from the legacy Word version and updated slightly for usability.   Summary  Key Components  Definitions  Major Modules  Remainder of Documentation",
            "title": "StateMod / Introduction"
        },
        {
            "location": "/introduction/introduction/#summary",
            "text": "The State of Colorado's Stream Simulation Model (StateMod) is a monthly or daily water\nallocation and accounting model capable of making comparative analyses for the\nassessment of various historical and future water management policies in a river basin.\nIt is designed to be applied to any river basin through appropriate input data preparation.   This document was prepared to explain the features and functions of StateMod and\npresumes the reader has a basic understanding of river operations.\nIt is current for StateMod Version 15. The documentation is intended for use by engineers,\nwater resource planners or anyone involved in water management decision making.\nIt is structured such that Sections 1 - 3 will stand alone to provide a general description of the model\nand its features. Sections 4 \u2013 10 provide the detail required to develop data sets and implement the model in a river basin.  StateMod's operation, like the stream itself, is governed by its hydrology, water rights,\nand the associated structures and operating rules.\nIt recognizes five (5) types of water rights: direct flow rights, instream flow rights,\nreservoir storage rights, well rights, and operational rights.\nEach of the water rights is given an administration number (rank) and location in the stream system.\nThe model then sorts the water rights by rank and simulates their operation by priority using\nthe Prior Appropriation Doctrine (first in time, first in right).\nThe water right categories are self-explanatory with the possible exception of the operational rights,\nwhich generally pertain to reservoir operating policies, exchanges,\ncarrier ditch systems, and terms and conditions associated with a water rights operation.",
            "title": "Summary"
        },
        {
            "location": "/introduction/introduction/#key-components",
            "text": "The key components of StateMod are as follows:   Daily or Monthly Time Step.  Simulates in a monthly or daily time step. For a daily simulation,\ninput data requirements may be simplified by allowing the user to:  Provide daily data  Estimate daily data by requesting the model divide a monthly value by the number of days in a month  Estimate daily data by requesting the model use a monthly average, or  Estimate daily data by requesting the model use monthly data and another gages daily distribution. \nDaily baseflow data may be developed directly or estimated from monthly baseflow estimates.     Network System.  Simulates tributaries and main stem river systems through the use of a tree structured network system.   Prior Appropriation Doctrine.  Simulates direct flow, instream flow, reservoir storage,\nwell and operational rights under the Prior Appropriation doctrine (i.e. First in time, first in right)\nas a function of water availability, priority, decreed amount, demand, structure capacity and location.   Operational Rules.  Simulates a wide variety of operating agreements and exchanges between one or more structures.   Return Flows.  For a given structure, simulates one or more return flow patterns\nreturning to one or more stream nodes to represent the impact of surface and ground water returns on stream operations.   Instream Flows.  Simulates Instream Flows as a reach or point.   Wells.  Simulates wells as the sole source to a water user or as a supplemental supply.   Plans.  Simulates terms and conditions associated with a water transfer,\nreusable water supplies or out-of-priority well pumping.  Base or Natural Flows.  Estimates a base or natural streamflow from gaged or estimated streamflow, diversion and reservoir data.   Modified Direct Solution Algorithm.  Uses an efficient, Modified Direct Solution Algorithm (Bennett, Ray R., December 2000),\nwhich allows variable efficiency, soil moisture accounting and immediate (current time step) return flows to be evaluated without having to iterate.   Variable Efficiency.  Allows the user to simulate water use by specifying an average or variable efficiency.   Soil Moisture Accounting.  Simulates soil moisture inflow, use and storage.   Transmountain Diversions.  Simulates transmountain imports and diversions from a basin.   Call Reporting.  Estimates the calling structure and calling right.  Graphical User Interface (GUI).  Includes a comprehensive GUI that allows input data to be viewed, edited, and graphed;\noutput data to be viewed and graphed; map based depiction of basin, hydrology, structure locations, etc. Currently the StateMod GUI should only be used to view (but not edit) data bacause of\nincompatibilities with the latest model file formats and features.  Data-centered Approach.  The entire system operates as a data-centered component using data from \nthe CDSS database (HydroBase).\nData Management Interface (DMI) software including TSTool and StateDMI are used to automate\nprocessing HydroBase data into model input files\n    to ensure results are reproducible and easily refreshed for a new study period or database updates.  Error Checking.  Performs extensive input data error checking throughout the program.",
            "title": "Key Components"
        },
        {
            "location": "/introduction/introduction/#definitions",
            "text": "The following definitions are provided in order to define commonly used terms throughout model documentation:   Baseflow  \u2013 Represents basin streamflows absent human\u2019s influence including diversions, return flows,\nreservoir operations and pumping. If 100% of human\u2019s influence is removed,\nbaseflows are often called natural flows.  Physical Flow and Available Flow  \u2013 Physical flow represents the amount of water in the\nstream that occurs at, or above, the node. The physical flow legally available for diversion\nat a node is termed the available flow. Available flow is the portion of the physical flow that is not\nrequired to meet downstream senior water rights.\nThe Modified Direct Solution Algorithm identifies the minimum available flow at all\ndownstream nodes in order to determine the available flow at node that can be diverted.   Model Calibration  \u2013 Calibration is the process of simulating the river basin under historical conditions,\nand judiciously adjusting parameter estimates to achieve agreement between observed and\nsimulated values of streamflow gages, reservoir levels, and diversions.  Diversion Structure  \u2013 Represents structures located on the river, such as diversion headgates,\npumps and carrier ditches where water is diverted from the river to meet a diversion demand.  Reservoir Structure  \u2013 Represents storage structures located on or off channel\nthat divert water from the river using reservoir storage rights.  Demand Structure  \u2013 Represent structures located on the river or off channel that have a demand,\nwhich can be met by a different structure such as a carrier, reservoir, or wells.  Instream Flow Structure or Instream Flow Point  \u2013 Represents a reach on the river (e.g. from tributary\nheadwaters to confluence with main stem river) or a river location (e.g. wastewater treatment plan outfall) where instream flow demands exist.  Plan Structure  \u2013 Represents a structure used to account for:  Augmentation Plans  Terms and Conditions associated with a water transfer, and  Reusable water supplies.    Unit Response Function  \u2013 Represent when return flows or depletions will impact the river over time.\nFor example a power plant diversion may have an immediate unit response function while an\nirrigation diversion or well pumping may have a lagged unit response function.  Efficiencies  \u2013 Define the amount of diverted water that is consumed versus the amount supplied.\nWhen the water supply is at the source (headgate or well head) it is called System Efficiency.\nSystem efficiency is commonly split into conveyance efficiency (representing diversions less ditch loss)\nand application efficiency (representing water use less application loss).  Consumptive Water Requirement (CIR)  \u2013 The amount of water required for consumption by an irrigation,\nmunicipal or instream use. The CIR excludes any conveyance or application efficiencies.\nFor an irrigation demand it is often called an Irrigation Water Requirement (IWR),\nwhich is the potential evapotranspiration less effective precipitation",
            "title": "Definitions"
        },
        {
            "location": "/introduction/introduction/#major-modules",
            "text": "StateMod consists of four major modules:   The Base Flow, or Natural Flow, module  produces a set of streamflows that would have\noccurred in the basin without a user-specified level of man's development.\nFor example, if a user supplied data that allows 100% of man's influence to be removed,\nthe base flow developed would represent natural stream flows.\nOn the other hand if a user supplies data that allows only 80% of mans influence to be removed,\nthe baseflow developed would represent something in-between (e.g. 80%) natural and developed.\nThe latter in-between approach is often used as a cost effective measure to simplify\nbaseflow development by including relatively large projects and excluding smaller,\nless significant developments. Note that any developments not included in the baseflow calculation are not ignored,\ninstead their impact on the system is included in the in-between baseflow estimate.   The Simulation module  operates the river system and accounts for inflows, river gains, diversions,\ninstream flows, well pumping, and reservoir operations.   The Report module  processes the results of the Simulation module into user specified reports and graphs data sets.   The Data Check module  reads the input files and performs various data checks.   Following is a general sequence for operating StateMod:   Develop a stream node network based on the location of key gages, river confluences,\nreservoirs, diversions, wells, and instream flows.  Construct the necessary monthly input files using the formats described in Section 4.0.  Check the input files by executing StateMod's Data Check Module.  Develop base stream flows by executing StateMod's Base Flow Module.  Simulate the stream system's operation by executing StateMod's Simulation Module.  Evaluate results and generate graphs and tables by executing StateMod's Report Module.  If desired, add daily simulation capability.",
            "title": "Major Modules"
        },
        {
            "location": "/introduction/introduction/#remainder-of-documentation",
            "text": "The remainder of this document is organized as follows:     Section  Title  Description      3.  Model Description  Describes the theoretical basis of river operations, water allocation and reservoir operations    4.  Input Description  Describes the input format for each data set    5.  Output Description  Describes the contents of the various outputs files    6.  Model Operation  Describes the model's operation from both the screen or command line arguments    7.  Standard Modeling Procedures  Describes technical details of selected portions of the programs operation and provides information on standard modeling procedures    8.  Supporting Utilities  Describes supporting utilities available to assist in developing a StateMod data set    9.  Discontinued but Supported Files  Describes discontinued but supported data file formats",
            "title": "Remainder of Documentation"
        },
        {
            "location": "/description/description/",
            "text": "StateMod / Model Description\n\n\nThis documentation has not been migrated from the legacy Word/PDF version.\n\n\n\n\nSee the \nModel Description section as PDF\n (note that the links work\nbut \nBack\n may return to this page).",
            "title": "3 - Model Description"
        },
        {
            "location": "/description/description/#statemod-model-description",
            "text": "This documentation has not been migrated from the legacy Word/PDF version.   See the  Model Description section as PDF  (note that the links work\nbut  Back  may return to this page).",
            "title": "StateMod / Model Description"
        },
        {
            "location": "/input/overview/",
            "text": "StateMod / Model Input / Overview\n\n\nThis documentation has not been migrated from the legacy Word/PDF version,\nalthough an example of possible online format is included below.\n\n\n\n\nSee the \nInput Description section as PDF\n (note that the links work but \nBack\n\nmay return to this page).\n\n\n\n\nThis section describes the input files required to operate the StateMod Model.\nSome data file formats have been superseded over time while continuing to maintain the old format.\nFor a description of the old format see\n\nSection 9.0 Discontinued by Supported File Formats\n.\n\n\nThe following is an example of what the documentaiton might look like if migrated to online format.\n\n\nModel input consists of the following major data types, each of which has a corresponding input file.\nClick on the data type in the first column to view documentation for the corresponding input file.\n\n\n\n\n\n\n\n\nData Type\n\n\nData File Extension\n\n\nData Interval\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nResponse File\n\n\nrsp\n\n\nAll\n\n\nLists files used in the dataset.\n\n\n\n\n\n\nOperating Rules\n\n\nrsp\n\n\nAll\n\n\nRules that control model decisions (beyond simple behavior).",
            "title": "Overview"
        },
        {
            "location": "/input/overview/#statemod-model-input-overview",
            "text": "This documentation has not been migrated from the legacy Word/PDF version,\nalthough an example of possible online format is included below.   See the  Input Description section as PDF  (note that the links work but  Back \nmay return to this page).   This section describes the input files required to operate the StateMod Model.\nSome data file formats have been superseded over time while continuing to maintain the old format.\nFor a description of the old format see Section 9.0 Discontinued by Supported File Formats .  The following is an example of what the documentaiton might look like if migrated to online format.  Model input consists of the following major data types, each of which has a corresponding input file.\nClick on the data type in the first column to view documentation for the corresponding input file.     Data Type  Data File Extension  Data Interval  Description      Response File  rsp  All  Lists files used in the dataset.    Operating Rules  rsp  All  Rules that control model decisions (beyond simple behavior).",
            "title": "StateMod / Model Input / Overview"
        },
        {
            "location": "/input/ResponseFile/",
            "text": "StateMod / Model Input / Response File (\n*.rsp\n)\n\n\nThe response file contains the names of all other data files required to run the model.\nhis file is read by subroutine StateM.\nNote that Version 10.30 and greater allows a user to enter response file data using one of two formats; free-format and sequential.\nStateMod reads the first file type and based on the occurrence of the character \n=\n in the\nfirst file name it determines if the file is free-format (contains a \n=\n) or sequential (does not contain a \n=\n).\n\n\nThe free-format file approach allows file names to be entered in any order using the file descriptors described in the table below,\nwhere each line of the response file uses a format similar to the following example:\n\n\nControl = dataset.ctl\n\n\n\n\nAny file type that is not required for a simulation is simply not included.\nAny file name may be commented out by including a \n#\n character in column 1.\nFor a description of the sequential, old, format see the section titled 9.0 Discontinued but Supported File Formats. \n\n\nNote that model output files take on the name of the response file.\nFor example, a response file with name \ndataset.rsp\n will result in output file \ndataset.b43\n and similar.\nIt is recommended that different model runs using descriptive response file naming conventions.\nFor example, use the dataset name as the general response file name (\ndataset.rsp\n) and use modifiers such as \nH\n for historical (\ndatasetH.rsp\n).\n\n\n\n\n\n\n\n\nFile Descriptor\n\n\nFile Type\n\n\nStandard File Extension\n\n\n\n\n\n\n\n\n\n\nControl\n\n\nControl File\n\n\n*.ctl\n\n\n\n\n\n\nRiver_Network\n\n\nRiver Network File\n\n\n*.rin\n\n\n\n\n\n\nRiver_Gage\n\n\nRiver Gage File\n\n\n*.rig\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReservoir_Station\n\n\nReservoir Station\n\n\n*.res\n\n\n\n\n\n\nDiversion_Station\n\n\nDiversion Station\n\n\n*.dds\n\n\n\n\n\n\nStreamGage_Station\n\n\nStream Gage Station\n\n\n*.ris\n\n\n\n\n\n\nInstreamflow_Station\n\n\nInstream Flow Station\n\n\n*.ifs\n\n\n\n\n\n\nWell_Station\n\n\nWell Station\n\n\n*.wes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstreamflow_Right\n\n\nInstream Flow Right\n\n\n*.ifr\n\n\n\n\n\n\nReservoir_Right\n\n\nReservoir Right\n\n\n*.rer\n\n\n\n\n\n\nDiversion_Right\n\n\nDiversion Right\n\n\n*.ddr\n\n\n\n\n\n\nOperational_Right\n\n\nOperational Right\n\n\n*.opr\n\n\n\n\n\n\nWell_Right\n\n\nWell Right\n\n\n*.wer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrecipitation_Monthly\n\n\nPrecipitation Monthly\n\n\n*.prc\n\n\n\n\n\n\nPrecipitation_Annual\n\n\nPrecipitation Annual\n\n\n*.pra\n\n\n\n\n\n\nEvaporation_Monthly\n\n\nEvaporation Monthly\n\n\n*.evm\n\n\n\n\n\n\nEvaporation_Annual\n\n\nEvaporation Annual\n\n\n*.eva\n\n\n\n\n\n\nStream_Base Monthly\n\n\nBaseflow Monthly\n\n\n*.rim/*.xbm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiversion_Demand_Monthly\n\n\nDiversion Demand Monthly\n\n\n*.ddm\n\n\n\n\n\n\nDiversion_Demand_AverageMonthly\n\n\nDiversion Demand Annual\n\n\n*.dda\n\n\n\n\n\n\nDiversion_DemandOverride_Monthly\n\n\nDiversion Override Monthly\n\n\n*.ddo\n\n\n\n\n\n\nInstreamflow_Demand_Monthly\n\n\nInst. Flow Demand Monthly\n\n\n*.ifm\n\n\n\n\n\n\nInstreamflow_Demand_AverageMonthly\n\n\nInst. Flow Demand Ave. Monthly\n\n\n*.ifa\n\n\n\n\n\n\nWell_Demand_Monthly\n\n\nWell Demand Monthly\n\n\n*.wem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDelayTable_Monthly\n\n\nDelay Table Monthly\n\n\n*.dly\n\n\n\n\n\n\nReservoir_Target_Monthly\n\n\nReservoir Target Monthly\n\n\n*.tar\n\n\n\n\n\n\nReservoir_Return\n\n\nReservoir Seepage Return Data\n\n\n*.rrf\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIrrigationPractice_Yearly\n\n\nIrrigation Practice Yearly\n\n\n*.ipy\n\n\n\n\n\n\nConsumptiveWaterRequirement_Monthly\n\n\nIrrigation Water Req. Monthly\n\n\n*.iwr/*.ddc\n\n\n\n\n\n\nStateCU_Structure\n\n\nStateCU Structure (AWC) file\n\n\n*.str\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReservoir_Historic_Monthly\n\n\nReservoir Historic Monthly\n\n\n*.eom\n\n\n\n\n\n\nStreamEstimate_Coefficients\n\n\nStream Estimate Coefficients\n\n\n*.rib\n\n\n\n\n\n\nStreamGage_Historic_Monthly\n\n\nStream Gage Historic Monthly\n\n\n`*.rih\n\n\n\n\n\n\nDiversion_Historic_Monthly\n       Diversion Historic Monthly\n\n\n*.ddh\n\n\n\n\n\n\n\n\nWell_Historic_Monthly\n\n\nWell Historic Monthly\n\n\n*.weh\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOutputRequest\n\n\nOutput Request\n\n\n*.out\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStream_Base_Daily\n\n\nStream Base Daily\n\n\n*.rid\n\n\n\n\n\n\nDiversion_Demand_Daily\n\n\nDirect Flow Demand Daily\n\n\n*.ddd\n\n\n\n\n\n\nInstreamflow_Demand_Daily\n\n\nInstream Flow Demand Daily\n\n\n*.ifd\n\n\n\n\n\n\nWell_Demand_Daily\n\n\nWell Demand Daily\n\n\n*.wed\n\n\n\n\n\n\nReservoir_Target_Daily\n\n\nReservoir Target Daily\n\n\n*.tad\n\n\n\n\n\n\nDelayTable_Daily\n\n\nDelay Table Daily\n\n\n*.dld\n\n\n\n\n\n\nConsumptiveWaterRequirement_Daily\n\n\nIrrigation Water Req. Daily\n\n\n*.iwd\n\n\n\n\n\n\nStreamGage_Historic_Daily\n\n\nStreamGage Historic Daily\n\n\n*.riy\n\n\n\n\n\n\nDiversion_Historic_Daily\n\n\nDiversion Historic Daily\n\n\n*.ddy\n\n\n\n\n\n\nWell_Historic_Daily\n\n\nWell Historic Daily\n\n\n*.wey\n\n\n\n\n\n\nReservoir_Historic_Daily\n\n\nReservoir Historic Daily\n\n\n*.eoy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDownstream_Call\n\n\nDownstream Call\n\n\n*.cal\n\n\n\n\n\n\nRioGrande_Spill_Monthly\n\n\nRio Grande Spill file\n\n\n*.rgs\n\n\n\n\n\n\nSan_Juan_Recovery\n\n\nSan Juan Recovery Data\n\n\n*.sjr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeographicInformation\n\n\nGeographic Information (not used by StateMod, used by StateMod GUI)\n\n\n*.gis\n\n\n\n\n\n\nNetwork\n\n\nNetwork File (not used by StateMod, used by StateMod GUI and StateDMI)\n\n\n*.net\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlan_Data\n\n\nPlan Data\n\n\n*.pln\n\n\n\n\n\n\nPlan_Wells\n\n\nPlan Well Augmentation Data\n\n\n*.plw\n\n\n\n\n\n\nPlan_Return\n\n\nPlan Return Data\n\n\n*.prf\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReach_Data\n\n\nReach Report Data\n\n\n*.rch",
            "title": "Response File"
        },
        {
            "location": "/input/ResponseFile/#statemod-model-input-response-file-rsp",
            "text": "The response file contains the names of all other data files required to run the model.\nhis file is read by subroutine StateM.\nNote that Version 10.30 and greater allows a user to enter response file data using one of two formats; free-format and sequential.\nStateMod reads the first file type and based on the occurrence of the character  =  in the\nfirst file name it determines if the file is free-format (contains a  = ) or sequential (does not contain a  = ).  The free-format file approach allows file names to be entered in any order using the file descriptors described in the table below,\nwhere each line of the response file uses a format similar to the following example:  Control = dataset.ctl  Any file type that is not required for a simulation is simply not included.\nAny file name may be commented out by including a  #  character in column 1.\nFor a description of the sequential, old, format see the section titled 9.0 Discontinued but Supported File Formats.   Note that model output files take on the name of the response file.\nFor example, a response file with name  dataset.rsp  will result in output file  dataset.b43  and similar.\nIt is recommended that different model runs using descriptive response file naming conventions.\nFor example, use the dataset name as the general response file name ( dataset.rsp ) and use modifiers such as  H  for historical ( datasetH.rsp ).     File Descriptor  File Type  Standard File Extension      Control  Control File  *.ctl    River_Network  River Network File  *.rin    River_Gage  River Gage File  *.rig         Reservoir_Station  Reservoir Station  *.res    Diversion_Station  Diversion Station  *.dds    StreamGage_Station  Stream Gage Station  *.ris    Instreamflow_Station  Instream Flow Station  *.ifs    Well_Station  Well Station  *.wes         Instreamflow_Right  Instream Flow Right  *.ifr    Reservoir_Right  Reservoir Right  *.rer    Diversion_Right  Diversion Right  *.ddr    Operational_Right  Operational Right  *.opr    Well_Right  Well Right  *.wer         Precipitation_Monthly  Precipitation Monthly  *.prc    Precipitation_Annual  Precipitation Annual  *.pra    Evaporation_Monthly  Evaporation Monthly  *.evm    Evaporation_Annual  Evaporation Annual  *.eva    Stream_Base Monthly  Baseflow Monthly  *.rim/*.xbm         Diversion_Demand_Monthly  Diversion Demand Monthly  *.ddm    Diversion_Demand_AverageMonthly  Diversion Demand Annual  *.dda    Diversion_DemandOverride_Monthly  Diversion Override Monthly  *.ddo    Instreamflow_Demand_Monthly  Inst. Flow Demand Monthly  *.ifm    Instreamflow_Demand_AverageMonthly  Inst. Flow Demand Ave. Monthly  *.ifa    Well_Demand_Monthly  Well Demand Monthly  *.wem         DelayTable_Monthly  Delay Table Monthly  *.dly    Reservoir_Target_Monthly  Reservoir Target Monthly  *.tar    Reservoir_Return  Reservoir Seepage Return Data  *.rrf         IrrigationPractice_Yearly  Irrigation Practice Yearly  *.ipy    ConsumptiveWaterRequirement_Monthly  Irrigation Water Req. Monthly  *.iwr/*.ddc    StateCU_Structure  StateCU Structure (AWC) file  *.str         Reservoir_Historic_Monthly  Reservoir Historic Monthly  *.eom    StreamEstimate_Coefficients  Stream Estimate Coefficients  *.rib    StreamGage_Historic_Monthly  Stream Gage Historic Monthly  `*.rih    Diversion_Historic_Monthly        Diversion Historic Monthly  *.ddh     Well_Historic_Monthly  Well Historic Monthly  *.weh         OutputRequest  Output Request  *.out         Stream_Base_Daily  Stream Base Daily  *.rid    Diversion_Demand_Daily  Direct Flow Demand Daily  *.ddd    Instreamflow_Demand_Daily  Instream Flow Demand Daily  *.ifd    Well_Demand_Daily  Well Demand Daily  *.wed    Reservoir_Target_Daily  Reservoir Target Daily  *.tad    DelayTable_Daily  Delay Table Daily  *.dld    ConsumptiveWaterRequirement_Daily  Irrigation Water Req. Daily  *.iwd    StreamGage_Historic_Daily  StreamGage Historic Daily  *.riy    Diversion_Historic_Daily  Diversion Historic Daily  *.ddy    Well_Historic_Daily  Well Historic Daily  *.wey    Reservoir_Historic_Daily  Reservoir Historic Daily  *.eoy         Downstream_Call  Downstream Call  *.cal    RioGrande_Spill_Monthly  Rio Grande Spill file  *.rgs    San_Juan_Recovery  San Juan Recovery Data  *.sjr         GeographicInformation  Geographic Information (not used by StateMod, used by StateMod GUI)  *.gis    Network  Network File (not used by StateMod, used by StateMod GUI and StateDMI)  *.net         Plan_Data  Plan Data  *.pln    Plan_Wells  Plan Well Augmentation Data  *.plw    Plan_Return  Plan Return Data  *.prf         Reach_Data  Reach Report Data  *.rch",
            "title": "StateMod / Model Input / Response File (*.rsp)"
        },
        {
            "location": "/input/OperatingRules/",
            "text": "StateMod / Model Input / Operating Rules (\n*.opr\n)\n\n\nAdd introductory information\n\n\n\n\n\n\n\n\nOperating Rule Type\n\n\nOperating Rule Name\n\n\nDestination or Diverting Structure\n\n\nSource or Replacement Structure\n\n\nOperational Activity\n\n\n\n\n\n\n\n\n\n\n1\n\n\nReservoir to instream flow\n - \nDocumentation is currently not enabled.\n\n\nInstream Flow\n\n\nReservoir\n\n\nReservoir to instream flow, delivery by the river",
            "title": "OperatingRules"
        },
        {
            "location": "/input/OperatingRules/#statemod-model-input-operating-rules-opr",
            "text": "Add introductory information     Operating Rule Type  Operating Rule Name  Destination or Diverting Structure  Source or Replacement Structure  Operational Activity      1  Reservoir to instream flow  -  Documentation is currently not enabled.  Instream Flow  Reservoir  Reservoir to instream flow, delivery by the river",
            "title": "StateMod / Model Input / Operating Rules (*.opr)"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/",
            "text": "StateMod / Input / Operating Rule / 1 - Reservoir to Instream Flow\n\n\n\n\nOverview\n\n\nInput File Format\n\n\nExamples\n\n\nTroubleshooting\n\n\nSee Also\n\n\n\n\n\n\nOverview\n\n\nThe type 1 (Resevoir to instream flow) operating rule provides a method to release water to an instream flow via the river.\n\n\nInput File Format\n\n\nThe input file format as follows:\n\n\na12, a24, 12x, 4x, f12.5, f8.0, i8, 3(1x,a12,i8), i8, 1x,a12, 1x,a12,1x, 2f8.0, 2i8)\n\n\n\n\n\n\n\n\n\n\n\nCategory\n\n\nPosition\n\n\nFormat\n\n\nVariable\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nControl\n\n\n1-1\n\n\na12\n\n\ncidvri(1)\n\n\nOperational right ID\n\n\nNone - must be specified.\n\n\n\n\n\n\nControl\n\n\n1-2\n\n\na24\n\n\nnameo(1)\n\n\nOperational right name\n\n\nNone - must be specified.\n\n\n\n\n\n\nControl\n\n\n1-3\n\n\nf12.5\n\n\nrtem(1)\n\n\nAdministration number\n\n\nNone - must be specified.\n\n\n\n\n\n\nControl\n\n\n1-4\n\n\nf8.0\n\n\ndumx\n\n\nMonthly switch:\n0\n = no monthly on/off values\n12\n = number of monthly on/off switches provided\n\n\nNone - must be specified.\n\n\n\n\n\n\nControl\n\n\n1-5\n\n\ni8\n\n\nioprsw(1)\n\n\nAnnual on/off switch\n0\n = off\n1\n = on\n+n\n = begin in year \nn\n-n\n = stop after year \nn\n\n\n\n\n\n\n\n\n\n\nNeed to complete\n\n\nExamples\n\n\nHere would link to automated tests and/or examples for this operating rule\n\n\nSee the \nautomated tests\n.\n\n\nTroubleshooting\n\n\nHere can describe how to troubleshoot\n\n\nSee Also\n\n\nHere would link to other relevant operating rules or other information",
            "title": "OperatingRule 1"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#statemod-input-operating-rule-1-reservoir-to-instream-flow",
            "text": "Overview  Input File Format  Examples  Troubleshooting  See Also",
            "title": "StateMod / Input / Operating Rule / 1 - Reservoir to Instream Flow"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#overview",
            "text": "The type 1 (Resevoir to instream flow) operating rule provides a method to release water to an instream flow via the river.",
            "title": "Overview"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#input-file-format",
            "text": "The input file format as follows:  a12, a24, 12x, 4x, f12.5, f8.0, i8, 3(1x,a12,i8), i8, 1x,a12, 1x,a12,1x, 2f8.0, 2i8)     Category  Position  Format  Variable  Description  Default      Control  1-1  a12  cidvri(1)  Operational right ID  None - must be specified.    Control  1-2  a24  nameo(1)  Operational right name  None - must be specified.    Control  1-3  f12.5  rtem(1)  Administration number  None - must be specified.    Control  1-4  f8.0  dumx  Monthly switch: 0  = no monthly on/off values 12  = number of monthly on/off switches provided  None - must be specified.    Control  1-5  i8  ioprsw(1)  Annual on/off switch 0  = off 1  = on +n  = begin in year  n -n  = stop after year  n      Need to complete",
            "title": "Input File Format"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#examples",
            "text": "Here would link to automated tests and/or examples for this operating rule  See the  automated tests .",
            "title": "Examples"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#troubleshooting",
            "text": "Here can describe how to troubleshoot",
            "title": "Troubleshooting"
        },
        {
            "location": "/input/OperatingRule-1/OperatingRule-1/#see-also",
            "text": "Here would link to other relevant operating rules or other information",
            "title": "See Also"
        },
        {
            "location": "/output/output/",
            "text": "StateMod / Model Output\n\n\nThis documentation has not been migrated from the legacy Word/PDF version.\n\n\n\n\nSee the \nOutput Description section as PDF\n (note that the links work\nbut \nBack\n may return to this page).",
            "title": "5 - Output Description"
        },
        {
            "location": "/output/output/#statemod-model-output",
            "text": "This documentation has not been migrated from the legacy Word/PDF version.   See the  Output Description section as PDF  (note that the links work\nbut  Back  may return to this page).",
            "title": "StateMod / Model Output"
        },
        {
            "location": "/operation/operation/",
            "text": "StateMod / Model Operation\n\n\nThis documentation has not been migrated from the legacy Word/PDF version.\n\n\n\n\nSee the \nModel Operation section as PDF\n (note that the links work\nbut \nBack\n may return to this page).",
            "title": "6 - Model Operation"
        },
        {
            "location": "/operation/operation/#statemod-model-operation",
            "text": "This documentation has not been migrated from the legacy Word/PDF version.   See the  Model Operation section as PDF  (note that the links work\nbut  Back  may return to this page).",
            "title": "StateMod / Model Operation"
        },
        {
            "location": "/procedures/procedures/",
            "text": "StateMod / Modeling Prodedures\n\n\nThis documentation has not been migrated from the legacy Word/PDF version.\n\n\n\n\nSee the \nModeling Procedures section as PDF\n (note that the links work\nbut \nBack\n may return to this page).",
            "title": "7 - Modeling Procedures"
        },
        {
            "location": "/procedures/procedures/#statemod-modeling-prodedures",
            "text": "This documentation has not been migrated from the legacy Word/PDF version.   See the  Modeling Procedures section as PDF  (note that the links work\nbut  Back  may return to this page).",
            "title": "StateMod / Modeling Prodedures"
        },
        {
            "location": "/utilities/utilities/",
            "text": "StateMod / Supporting Utilities\n\n\nThis documentation has not been migrated from the legacy Word/PDF version.\n\n\n\n\nSee the \nSupporting Utilities section as PDF\n (note that the links work\nbut \nBack\n may return to this page).",
            "title": "8 - Supporting Utilities"
        },
        {
            "location": "/utilities/utilities/#statemod-supporting-utilities",
            "text": "This documentation has not been migrated from the legacy Word/PDF version.   See the  Supporting Utilities section as PDF  (note that the links work\nbut  Back  may return to this page).",
            "title": "StateMod / Supporting Utilities"
        },
        {
            "location": "/discontinued-files/discontinued-files/",
            "text": "StateMod / Discontinued but Supported Files\n\n\nThis documentation has not been migrated.",
            "title": "9 - Discontinued but Supported Files"
        },
        {
            "location": "/discontinued-files/discontinued-files/#statemod-discontinued-but-supported-files",
            "text": "This documentation has not been migrated.",
            "title": "StateMod / Discontinued but Supported Files"
        },
        {
            "location": "/examples/overview/",
            "text": "StateMod / Model Input / Examples\n\n\nList here the examples - this is a possible enhancement to documentation, and could also link to tests.\n\n\n\n\n\n\n\n\nExample\n\n\nDescription\n\n\nRepository Link",
            "title": "Overview"
        },
        {
            "location": "/examples/overview/#statemod-model-input-examples",
            "text": "List here the examples - this is a possible enhancement to documentation, and could also link to tests.     Example  Description  Repository Link",
            "title": "StateMod / Model Input / Examples"
        },
        {
            "location": "/lesson1-model-config/",
            "text": "StateMod / Lesson / Create Model Configuration\n\n\nThis is a placeholder for training lessons.  For example, describe here how to create the configuration files for a dataset.",
            "title": "Lesson 1 - Create model configuration"
        },
        {
            "location": "/lesson1-model-config/#statemod-lesson-create-model-configuration",
            "text": "This is a placeholder for training lessons.  For example, describe here how to create the configuration files for a dataset.",
            "title": "StateMod / Lesson / Create Model Configuration"
        }
    ]
}